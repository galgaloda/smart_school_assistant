import 'package:hive/hive.dart';

part 'models.g.dart'; // Will be generated by Hive

// User model for Firebase authentication
@HiveType(typeId: 13)
class User extends HiveObject {
  @HiveField(0)
  String id; // Firebase user ID

  @HiveField(1)
  String email;

  @HiveField(2)
  String? displayName;

  @HiveField(3)
  String? photoUrl;

  @HiveField(4)
  String role; // 'admin', 'teacher', 'student'

  @HiveField(5)
  DateTime createdAt;

  @HiveField(6)
  DateTime lastLoginAt;

  @HiveField(7)
  bool isActive;

  @HiveField(8)
  String? schoolName;

  @HiveField(9)
  String? schoolAddress;

  @HiveField(10)
  String? schoolPhone;

  // Sync fields for Firebase integration
  @HiveField(11)
  bool isSynced = false;

  @HiveField(12)
  DateTime? lastUpdated;

  @HiveField(13)
  String? userId; // Firebase user ID who owns this data

  @HiveField(14)
  String? syncId; // Unique ID for sync operations

  @HiveField(15)
  String? adminTitle; // Admin-specific title

  @HiveField(16)
  String? createdBy; // User ID who created this user

  @HiveField(17)
  String? updatedBy; // User ID who last updated this user

  User({
    required this.id,
    required this.email,
    this.displayName,
    this.photoUrl,
    required this.role,
    required this.createdAt,
    required this.lastLoginAt,
    this.isActive = true,
    this.schoolName,
    this.schoolAddress,
    this.schoolPhone,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
    this.adminTitle,
    this.createdBy,
    this.updatedBy,
  });

  // Helper method to get role display name
  String get roleDisplayName {
    switch (role) {
      case 'admin':
        return 'Administrator';
      case 'teacher':
        return 'Teacher';
      case 'student':
        return 'Student';
      default:
        return 'Unknown';
    }
  }

  // Helper method to check if user has admin privileges
  bool get isAdmin => role == 'admin';

  // Helper method to check if user has teacher privileges
  bool get isTeacher => role == 'teacher' || role == 'admin';

  // Helper method to check if user has student privileges
  bool get isStudent => role == 'student' || role == 'teacher' || role == 'admin';
}

@HiveType(typeId: 0)
class Student extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String fullName;

  @HiveField(2)
  String? photoPath; // Path to the image file on the device

  @HiveField(3)
  DateTime dateOfBirth;

  @HiveField(4)
  String gender;

  @HiveField(5)
  String classSectionId; // Links to a ClassSection

  @HiveField(6)
  String? phoneNumber;

  @HiveField(7)
  String? address;

  @HiveField(8)
  String? emergencyContactName;

  @HiveField(9)
  String? emergencyContactPhone;

  @HiveField(10)
  String? email;

  @HiveField(11)
  DateTime? enrollmentDate;

  @HiveField(12)
  String? studentId; // School ID number

  @HiveField(13)
  String? grade; // Grade level (e.g., "Grade 7", "Grade 8")

  @HiveField(14)
  String? bloodType;

  @HiveField(15)
  String? medicalConditions;

  @HiveField(16)
  String? nationality;

  @HiveField(17)
  String? religion;

  // Sync fields for Firebase integration
  @HiveField(18)
  bool isSynced = false;

  @HiveField(19)
  DateTime? lastUpdated;

  @HiveField(20)
  String? userId; // Firebase user ID who owns this data

  @HiveField(21)
  String? syncId; // Unique ID for sync operations

  Student({
    required this.id,
    required this.fullName,
    this.photoPath,
    required this.dateOfBirth,
    required this.gender,
    required this.classSectionId,
    this.phoneNumber,
    this.address,
    this.emergencyContactName,
    this.emergencyContactPhone,
    this.email,
    this.enrollmentDate,
    this.studentId,
    this.grade,
    this.bloodType,
    this.medicalConditions,
    this.nationality,
    this.religion,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });

  // Helper method to calculate age
  int get age {
    final now = DateTime.now();
    int age = now.year - dateOfBirth.year;
    if (now.month < dateOfBirth.month ||
        (now.month == dateOfBirth.month && now.day < dateOfBirth.day)) {
      age--;
    }
    return age;
  }

  // Helper method to get formatted enrollment date
  String get formattedEnrollmentDate {
    if (enrollmentDate == null) return 'Not set';
    return '${enrollmentDate!.day}/${enrollmentDate!.month}/${enrollmentDate!.year}';
  }
}

@HiveType(typeId: 1)
class Teacher extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String fullName;

  // Sync fields for Firebase integration
  @HiveField(2)
  bool isSynced = false;

  @HiveField(3)
  DateTime? lastUpdated;

  @HiveField(4)
  String? userId; // Firebase user ID who owns this data

  @HiveField(5)
  String? syncId; // Unique ID for sync operations

  Teacher({
    required this.id,
    required this.fullName,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}

@HiveType(typeId: 2)
class Subject extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String name;

  @HiveField(2)
  String teacherId; // Links to a Teacher

  // Sync fields for Firebase integration
  @HiveField(3)
  bool isSynced = false;

  @HiveField(4)
  DateTime? lastUpdated;

  @HiveField(5)
  String? userId; // Firebase user ID who owns this data

  @HiveField(6)
  String? syncId; // Unique ID for sync operations

  Subject({
    required this.id,
    required this.name,
    required this.teacherId,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}

@HiveType(typeId: 3)
class ClassSection extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String name; // e.g., "Grade 7A"

  // Sync fields for Firebase integration
  @HiveField(2)
  bool isSynced = false;

  @HiveField(3)
  DateTime? lastUpdated;

  @HiveField(4)
  String? userId; // Firebase user ID who owns this data

  @HiveField(5)
  String? syncId; // Unique ID for sync operations

  ClassSection({
    required this.id,
    required this.name,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}

@HiveType(typeId: 4)
class Score extends HiveObject {
  @HiveField(0)
  String studentId;

  @HiveField(1)
  String subjectId;

  @HiveField(2)
  String assessmentType; // e.g., "Homework", "Mid-term", "Final Exam"

  @HiveField(3)
  double marks;

  @HiveField(4)
  DateTime date;

  // Sync fields for Firebase integration
  @HiveField(5)
  bool isSynced = false;

  @HiveField(6)
  DateTime? lastUpdated;

  @HiveField(7)
  String? userId; // Firebase user ID who owns this data

  @HiveField(8)
  String? syncId; // Unique ID for sync operations

  Score({
    required this.studentId,
    required this.subjectId,
    required this.assessmentType,
    required this.marks,
    required this.date,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}

@HiveType(typeId: 5)
class AttendanceRecord extends HiveObject {
  @HiveField(0)
  String studentId;

  @HiveField(1)
  DateTime date;

  @HiveField(2)
  String status; // e.g., "Present", "Absent", "Late"

  // Sync fields for Firebase integration
  @HiveField(3)
  bool isSynced = false;

  @HiveField(4)
  DateTime? lastUpdated;

  @HiveField(5)
  String? userId; // Firebase user ID who owns this data

  @HiveField(6)
  String? syncId; // Unique ID for sync operations

  AttendanceRecord({
    required this.studentId,
    required this.date,
    required this.status,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}

@HiveType(typeId: 6)
class TimeTableEntry extends HiveObject {
  @HiveField(0)
  String dayOfWeek; // e.g., "Monday"

  @HiveField(1)
  String period; // e.g., "Period 1 (8:00-8:40)"

  @HiveField(2)
  String subjectId;

  @HiveField(3)
  String classSectionId;

  // Sync fields for Firebase integration
  @HiveField(4)
  bool isSynced = false;

  @HiveField(5)
  DateTime? lastUpdated;

  @HiveField(6)
  String? userId; // Firebase user ID who owns this data

  @HiveField(7)
  String? syncId; // Unique ID for sync operations

  TimeTableEntry({
    required this.dayOfWeek,
    required this.period,
    required this.subjectId,
    required this.classSectionId,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}
// PASTE THE NEW CODE HERE
@HiveType(typeId: 7)
class Period extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String name; // e.g., "Period 1", "Break"

  @HiveField(2)
  String time; // e.g., "8:00 - 8:40"

  @HiveField(3)
  bool isBreak;

  // Sync fields for Firebase integration
  @HiveField(4)
  bool isSynced = false;

  @HiveField(5)
  DateTime? lastUpdated;

  @HiveField(6)
  String? userId; // Firebase user ID who owns this data

  @HiveField(7)
  String? syncId; // Unique ID for sync operations

  Period({
    required this.id,
    required this.name,
    required this.time,
    this.isBreak = false,
    this.isSynced = false,
    this.lastUpdated,
    this.userId,
    this.syncId,
  });
}

@HiveType(typeId: 8)
class InventoryItem extends HiveObject {
 @HiveField(0)
 String id;

 @HiveField(1)
 String name; // e.g., "Book", "Table", "Computer"

 @HiveField(2)
 int quantity;

 @HiveField(3)
 String type; // e.g., "Educational", "Furniture", "Electronics"

 @HiveField(4)
 String condition; // "Worked" or "Not Worked"

 @HiveField(5)
 String description;

 @HiveField(6)
 DateTime dateAdded;

 // Sync fields for Firebase integration
 @HiveField(7)
 bool isSynced = false;

 @HiveField(8)
 DateTime? lastUpdated;

 @HiveField(9)
 String? userId; // Firebase user ID who owns this data

 @HiveField(10)
 String? syncId; // Unique ID for sync operations

 InventoryItem({
   required this.id,
   required this.name,
   required this.quantity,
   required this.type,
   required this.condition,
   required this.description,
   required this.dateAdded,
   this.isSynced = false,
   this.lastUpdated,
   this.userId,
   this.syncId,
 });
}

@HiveType(typeId: 9)
class DataRecord extends HiveObject {
 @HiveField(0)
 String id;

 @HiveField(1)
 String title;

 @HiveField(2)
 String category; // e.g., "Policies", "Student Records", "Teacher Records", "Administrative"

 @HiveField(3)
 String content;

 @HiveField(4)
 String? attachmentPath; // Path to attached file/document

 @HiveField(5)
 String priority; // "Low", "Medium", "High", "Critical"

 @HiveField(6)
 String status; // "Active", "Archived", "Draft"

 @HiveField(7)
 DateTime dateCreated;

 @HiveField(8)
 DateTime? lastModified;

 @HiveField(9)
 String createdBy; // User who created the record

 // Sync fields for Firebase integration
 @HiveField(10)
 bool isSynced = false;

 @HiveField(11)
 DateTime? lastUpdated;

 @HiveField(12)
 String? userId; // Firebase user ID who owns this data

 @HiveField(13)
 String? syncId; // Unique ID for sync operations

 DataRecord({
   required this.id,
   required this.title,
   required this.category,
   required this.content,
   this.attachmentPath,
   required this.priority,
   required this.status,
   required this.dateCreated,
   this.lastModified,
   required this.createdBy,
   this.isSynced = false,
   this.lastUpdated,
   this.userId,
   this.syncId,
 });
}

@HiveType(typeId: 10)
class Assessment extends HiveObject {
 @HiveField(0)
 String id;

 @HiveField(1)
 String name; // e.g., "Quiz", "Mid-term", "Final Exam", "Project"

 @HiveField(2)
 String subjectId; // Links to Subject

 @HiveField(3)
 String classSectionId; // Links to ClassSection

 @HiveField(4)
 String semesterId; // Links to Semester

 @HiveField(5)
 double weight; // Weight in percentage (e.g., 0.2 for 20%)

 @HiveField(6)
 double maxMarks; // Maximum marks for this assessment

 @HiveField(7)
 DateTime dueDate;

 @HiveField(8)
 String description;

 // Sync fields for Firebase integration
 @HiveField(9)
 bool isSynced = false;

 @HiveField(10)
 DateTime? lastUpdated;

 @HiveField(11)
 String? userId; // Firebase user ID who owns this data

 @HiveField(12)
 String? syncId; // Unique ID for sync operations

 Assessment({
   required this.id,
   required this.name,
   required this.subjectId,
   required this.classSectionId,
   required this.semesterId,
   required this.weight,
   required this.maxMarks,
   required this.dueDate,
   required this.description,
   this.isSynced = false,
   this.lastUpdated,
   this.userId,
   this.syncId,
 });
}

@HiveType(typeId: 11)
class Semester extends HiveObject {
 @HiveField(0)
 String id;

 @HiveField(1)
 String name; // e.g., "Semester 1", "Semester 2"

 @HiveField(2)
 String academicYear; // e.g., "2023-2024"

 @HiveField(3)
 DateTime startDate;

 @HiveField(4)
 DateTime endDate;

 @HiveField(5)
 bool isActive; // Whether this semester is currently active

 // Sync fields for Firebase integration
 @HiveField(6)
 bool isSynced = false;

 @HiveField(7)
 DateTime? lastUpdated;

 @HiveField(8)
 String? userId; // Firebase user ID who owns this data

 @HiveField(9)
 String? syncId; // Unique ID for sync operations

 Semester({
   required this.id,
   required this.name,
   required this.academicYear,
   required this.startDate,
   required this.endDate,
   required this.isActive,
   this.isSynced = false,
   this.lastUpdated,
   this.userId,
   this.syncId,
 });
}

@HiveType(typeId: 12)
class AssessmentScore extends HiveObject {
 @HiveField(0)
 String id;

 @HiveField(1)
 String studentId; // Links to Student

 @HiveField(2)
 String assessmentId; // Links to Assessment

 @HiveField(3)
 double marksObtained; // Marks obtained by student

 @HiveField(4)
 DateTime dateRecorded;

 @HiveField(5)
 String recordedBy; // Teacher who recorded the score

 // Sync fields for Firebase integration
 @HiveField(6)
 bool isSynced = false;

 @HiveField(7)
 DateTime? lastUpdated;

 @HiveField(8)
 String? userId; // Firebase user ID who owns this data

 @HiveField(9)
 String? syncId; // Unique ID for sync operations

 AssessmentScore({
   required this.id,
   required this.studentId,
   required this.assessmentId,
   required this.marksObtained,
   required this.dateRecorded,
   required this.recordedBy,
   this.isSynced = false,
   this.lastUpdated,
   this.userId,
   this.syncId,
 });
}